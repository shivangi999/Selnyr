{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aman\\\\Desktop\\\\roc8\\\\Selnyr\\\\admin\\\\src\\\\containers\\\\Category\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../actions';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nconst Category = props => {\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!category.loading) {\n      setShow(false);\n    }\n  }, [category.loading]);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === \"\") {\n      alert('Category name is required');\n      setShow(false);\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    console.log(value);\n\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Expanded\"), expandedArray.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 54\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Checked\"), checkedArray.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 53\n      }\n    }, item.name)));\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/React.createElement(Layout, {\n    sidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actionBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, \"Actions: \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 62\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 75\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosTrash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 66\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 81\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosCloudUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 66\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 87\n    }\n  }, \"Edit\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxTree, {\n    nodes: renderCategories(category.categories),\n    checked: checked,\n    expanded: expanded,\n    onCheck: checked => setChecked(checked),\n    onExpand: expanded => setExpanded(expanded),\n    icons: {\n      check: /*#__PURE__*/React.createElement(IoIosCheckbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 40\n        }\n      }),\n      uncheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 42\n        }\n      }),\n      halfCheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 44\n        }\n      }),\n      expandClose: /*#__PURE__*/React.createElement(IoIosArrowForward, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 46\n        }\n      }),\n      expandOpen: /*#__PURE__*/React.createElement(IoIosArrowDown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 45\n        }\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(AddCategoryModal, {\n    show: show,\n    handleClose: () => setShow(false),\n    onSubmit: handleClose,\n    modalTitle: 'Add New Category',\n    categoryName: categoryName,\n    setCategoryName: setCategoryName,\n    parentCategoryId: parentCategoryId,\n    setParentCategoryId: setParentCategoryId,\n    categoryList: categoryList,\n    handleCategoryImage: handleCategoryImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UpdateCategoriesModal, {\n    show: updateCategoryModal,\n    handleClose: () => setUpdateCategoryModal(false),\n    onSubmit: updateCategoriesForm,\n    modalTitle: 'Update Categories',\n    size: \"lg\",\n    expandedArray: expandedArray,\n    checkedArray: checkedArray,\n    handleCategoryInput: handleCategoryInput,\n    categoryList: categoryList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), renderDeleteCategoryModal());\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/Aman/Desktop/roc8/Selnyr/admin/src/containers/Category/index.js"],"names":["React","useEffect","useState","Layout","Container","Row","Col","useDispatch","useSelector","getAllCategory","addCategory","updateCategories","deleteCategories","deleteCategoriesAction","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","UpdateCategoriesModal","AddCategoryModal","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","loading","handleClose","form","FormData","alert","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","console","log","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from 'react-icons/io'\r\n\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!category.loading) {\r\n            setShow(false);\r\n        }\r\n\r\n    }, [category.loading]);\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n\r\n        if (categoryName === \"\") {\r\n            alert('Category name is required');\r\n            setShow(false);\r\n            return;\r\n        }\r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                type: category.type\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const updateCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setUpdateCategoryModal(true);\r\n    }\r\n\r\n    const updateCheckedAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n    }\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        console.log(value);\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n                index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n                index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        dispatch(updateCategories(form));\r\n        \r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                });\r\n        }\r\n\r\n        setDeleteCategoryModal(false);\r\n\r\n\r\n    }\r\n\r\n    const renderDeleteCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n                    }\r\n                ]}\r\n            >\r\n\r\n\r\n                <h5>Expanded</h5>\r\n                { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n                <h5>Checked</h5>\r\n                { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const categoryList = createCategoryList(category.categories);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span>Actions: </span>\r\n                                <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\r\n                                <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\r\n                                <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={() => setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                categoryList={categoryList}\r\n                handleCategoryImage={handleCategoryImage}\r\n            />\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={() => setUpdateCategoryModal(false)}\r\n                onSubmit={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size=\"lg\"\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n            {/* {renderAddCategoryModal()} */}\r\n            {renderDeleteCategoryModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}