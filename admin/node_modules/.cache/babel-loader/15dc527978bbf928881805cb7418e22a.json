{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aman\\\\Desktop\\\\Roc8\\\\Selnyr\\\\admin\\\\src\\\\containers\\\\NewPage\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../components/UI/Modal';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPage } from '../../actions';\n/**\r\n* @author\r\n* @function NewPage\r\n**/\n\nconst NewPage = props => {\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const category = useSelector(state => state.category);\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [desc, setDesc] = useState('');\n  const [type, setType] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n  useEffect(() => {\n    setCategories(linearCategories(category.categories));\n  }, [category]);\n  useEffect(() => {\n    console.log(page);\n\n    if (!page.loading) {\n      setCreateModal(false);\n      setTitle('');\n      setCategoryId('');\n      setDesc('');\n      setProducts([]);\n      setBanners([]);\n    }\n  }, [page]);\n\n  const onCategoryChange = e => {\n    const category = categories.find(category => category.value == e.target.value);\n    setCategoryId(e.target.value);\n    setType(category.type);\n  };\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    //e.target.preventDefault();\n    if (title === \"\") {\n      alert('Title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', desc);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    dispatch(createPage(form));\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: () => setCreateModal(false),\n      onSubmit: submitPageForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      value: categoryId,\n      onChange: onCategoryChange,\n      options: categories,\n      placeholder: 'Select Category',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: 'Page Title',\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: desc,\n      onChange: e => setDesc(e.target.value),\n      placeholder: 'Page Desc',\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }))), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, banner.name))) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"file\",\n      name: \"banners\",\n      onChange: handleBannerImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }))), products.length > 0 ? products.map((product, index) => /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, product.name))) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"file\",\n      name: \"products\",\n      onChange: handleProductImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    })))));\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    sidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, page.loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"Creating Page...please wait\") : /*#__PURE__*/React.createElement(React.Fragment, null, renderCreatePageModal(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCreateModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Create Page\")));\n};\n\nexport default NewPage;","map":{"version":3,"sources":["C:/Users/Aman/Desktop/Roc8/Selnyr/admin/src/containers/NewPage/index.js"],"names":["React","useState","useEffect","Modal","Layout","Input","Container","Row","Col","linearCategories","useSelector","useDispatch","createPage","NewPage","props","createModal","setCreateModal","title","setTitle","category","state","categories","setCategories","categoryId","setCategoryId","desc","setDesc","type","setType","banners","setBanners","products","setProducts","dispatch","page","console","log","loading","onCategoryChange","e","find","value","target","handleBannerImages","files","handleProductImages","submitPageForm","alert","form","FormData","append","forEach","banner","index","product","renderCreatePageModal","length","map","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from '../../components/UI/Modal';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport linearCategories from '../../helpers/linearCategories';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPage } from '../../actions';\r\n\r\n/**\r\n* @author\r\n* @function NewPage\r\n**/\r\n\r\nconst NewPage = (props) => {\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const category = useSelector(state => state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n    }, [category]);\r\n\r\n    useEffect(() => {\r\n        console.log(page);\r\n        if(!page.loading){\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDesc('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    }, [page]);\r\n\r\n    const onCategoryChange = (e) => {\r\n        const category = categories.find(category => category.value == e.target.value);\r\n        setCategoryId(e.target.value);\r\n        setType(category.type);\r\n    }\r\n\r\n    const handleBannerImages = (e) => {\r\n        console.log(e);\r\n        setBanners([...banners, e.target.files[0]]);\r\n    }\r\n\r\n    const handleProductImages = (e) => {\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n    }\r\n\r\n    const submitPageForm = (e) => {\r\n        //e.target.preventDefault();\r\n\r\n        if(title === \"\"){\r\n            alert('Title is required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', desc);\r\n        form.append('category', categoryId);\r\n        form.append('type', type);\r\n        banners.forEach((banner, index) => {\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) => {\r\n            form.append('products', product);\r\n        });\r\n\r\n        dispatch(createPage(form));\r\n\r\n        \r\n    }\r\n\r\n    const renderCreatePageModal = () => {\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTitle={'Create New Page'}\r\n                handleClose={() => setCreateModal(false)}\r\n                onSubmit={submitPageForm}\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {/* <select\r\n                                className=\"form-control\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">select category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n                            </select> */}\r\n                            <Input \r\n                                type=\"select\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                                options={categories}\r\n                                placeholder={'Select Category'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                placeholder={'Page Title'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={desc}\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                placeholder={'Page Desc'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                            banners.length > 0 ? \r\n                            banners.map((banner, index) => \r\n                                <Row key={index}>\r\n                                    <Col>{banner.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                className=\"form-control\" \r\n                                type=\"file\" \r\n                                name=\"banners\"\r\n                                onChange={handleBannerImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                            products.length > 0 ? \r\n                            products.map((product, index) => \r\n                                <Row key={index}>\r\n                                    <Col>{product.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                        }\r\n                    <Row>\r\n                        <Col>\r\n                            <Input \r\n                                className=\"form-control\"\r\n                                type=\"file\" \r\n                                name=\"products\"\r\n                                onChange={handleProductImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n\r\n                </Container>\r\n\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            {\r\n                page.loading ? \r\n                <p>Creating Page...please wait</p>\r\n                :\r\n                <>\r\n                    {renderCreatePageModal()}\r\n                    <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n                </>\r\n            }\r\n            \r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default NewPage"]},"metadata":{},"sourceType":"module"}