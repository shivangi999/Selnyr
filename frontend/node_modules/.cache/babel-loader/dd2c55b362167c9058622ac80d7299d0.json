{"ast":null,"code":"import { authConstants, cartConstants } from \"./constants\";\nimport axios from \"../helpers/axios\"; // new update signup action\n\nexport const signup = user => {\n  return async dispatch => {\n    let res;\n\n    try {\n      dispatch({\n        type: authConstants.SIGNUP_REQUEST\n      });\n      res = await axios.post(`/signup`, user);\n\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.SIGNUP_SUCCESS\n        });\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: authConstants.SIGNUP_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      dispatch({\n        type: authConstants.SIGNUP_FAILURE,\n        payload: {\n          error: data.error\n        }\n      });\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Failed to login\"\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    }); // localStorage.removeItem('user');\n    // localStorage.removeItem('token');\n\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    dispatch({\n      type: cartConstants.RESET_CART\n    }); //const res = await axios.post(`/admin/signout`);\n    // if(res.status === 200){\n    // }else{\n    //     dispatch({\n    //         type: authConstants.LOGOUT_FAILURE,\n    //         payload: { error: res.data.error }\n    //     });\n    // }\n  };\n};","map":{"version":3,"sources":["C:/Users/Aman/Desktop/Roc8/Selnyr/frontend/src/actions/auth.action.js"],"names":["authConstants","cartConstants","axios","signup","user","dispatch","res","type","SIGNUP_REQUEST","post","status","SIGNUP_SUCCESS","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","error","SIGNUP_FAILURE","response","login","LOGIN_REQUEST","LOGIN_FAILURE","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","RESET_CART"],"mappings":"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","sourcesContent":["import { authConstants, cartConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\n// new update signup action\r\nexport const signup = (user) => {\r\n  return async (dispatch) => {\r\n    let res;\r\n    try {\r\n      dispatch({ type: authConstants.SIGNUP_REQUEST });\r\n      res = await axios.post(`/signup`, user);\r\n      if (res.status === 201) {\r\n        dispatch({ type: authConstants.SIGNUP_SUCCESS });\r\n        const { token, user } = res.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch({\r\n          type: authConstants.LOGIN_SUCCESS,\r\n          payload: {\r\n            token,\r\n            user,\r\n          },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\r\n      }\r\n    } catch (error) {\r\n      const { data } = error.response;\r\n      dispatch({\r\n        type: authConstants.SIGNUP_FAILURE,\r\n        payload: { error: data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    const res = await axios.post(`/signin`, {\r\n      ...user,\r\n    });\r\n\r\n    if (res.status === 200) {\r\n      const { token, user } = res.data;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      if (res.status === 400) {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: { error: res.data.error },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to login\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n    // localStorage.removeItem('user');\r\n    // localStorage.removeItem('token');\r\n    localStorage.clear();\r\n    dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n    dispatch({ type: cartConstants.RESET_CART });\r\n    //const res = await axios.post(`/admin/signout`);\r\n    // if(res.status === 200){\r\n\r\n    // }else{\r\n    //     dispatch({\r\n    //         type: authConstants.LOGOUT_FAILURE,\r\n    //         payload: { error: res.data.error }\r\n    //     });\r\n    // }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}