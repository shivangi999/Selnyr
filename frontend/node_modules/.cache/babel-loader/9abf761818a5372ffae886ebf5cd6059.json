{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } else {// dispatch({\n      //     type: \n      // })\n    }\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        cid,\n        type\n      } = payload.params;\n      const res = await axios.get(`/page/${cid}/${type}`);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getProductDetailsById = payload => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST\n    });\n    let res;\n\n    try {\n      const {\n        productId\n      } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n        payload: {\n          productDetails: res.data.product\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Aman/Desktop/Roc8/Selnyr/ecommerce-flipkart-clone/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","res","get","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","cid","params","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE","console","log","getProductDetailsById","GET_PRODUCT_DETAILS_BY_ID_REQUEST","productId","GET_PRODUCT_DETAILS_BY_ID_SUCCESS","productDetails","product","GET_PRODUCT_DETAILS_BY_ID_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,aAAYH,IAAK,EAA5B,CAAlB;;AACA,QAAIE,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACQ,oBADlB;AAELC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH,KALD,MAKO,CACH;AACA;AACA;AACH;AACJ,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAIF,OAAD,IAAa;AACvC,SAAO,MAAMN,QAAN,IAAkB;AACrB,QAAI;AACA,YAAM;AAAES,QAAAA,GAAF;AAAOL,QAAAA;AAAP,UAAgBE,OAAO,CAACI,MAA9B;AACA,YAAMT,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,SAAQO,GAAI,IAAGL,IAAK,EAA/B,CAAlB;AACAJ,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP,gBAAgB,CAACc;AAAzB,OAAD,CAAR;;AACA,UAAIV,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,cAAM;AAAES,UAAAA;AAAF,YAAWX,GAAG,CAACM,IAArB;AACAP,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAEP,gBAAgB,CAACgB,wBADlB;AAELP,UAAAA,OAAO,EAAE;AAAEM,YAAAA;AAAF;AAFJ,SAAD,CAAR;AAIH,OAND,MAMO;AACH,cAAM;AAAEE,UAAAA;AAAF,YAAYb,GAAG,CAACM,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAEP,gBAAgB,CAACkB,wBADlB;AAELT,UAAAA,OAAO,EAAE;AAAEQ,YAAAA;AAAF;AAFJ,SAAD,CAAR;AAIH;AACJ,KAjBD,CAiBE,OAAMA,KAAN,EAAa;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AAEJ,GAtBD;AAuBH,CAxBM;AA0BP,OAAO,MAAMI,qBAAqB,GAAIZ,OAAD,IAAa;AAC9C,SAAO,MAAMN,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP,gBAAgB,CAACsB;AAAzB,KAAD,CAAR;AACA,QAAIlB,GAAJ;;AACA,QAAI;AACA,YAAM;AAAEmB,QAAAA;AAAF,UAAgBd,OAAO,CAACI,MAA9B;AACAT,MAAAA,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,YAAWkB,SAAU,EAAhC,CAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACAD,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACwB,iCADlB;AAELf,QAAAA,OAAO,EAAE;AAAEgB,UAAAA,cAAc,EAAErB,GAAG,CAACM,IAAJ,CAASgB;AAA3B;AAFJ,OAAD,CAAR;AAKH,KATD,CASE,OAAMT,KAAN,EAAa;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAd,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAAC2B,iCADlB;AAELlB,QAAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAEb,GAAG,CAACM,IAAJ,CAASO;AAAlB;AAFJ,OAAD,CAAR;AAIH;AAEJ,GApBD;AAqBH,CAtBM","sourcesContent":["import axios from \"../helpers/axios\"\r\nimport { productConstants } from \"./constants\";\r\n\r\nexport const getProductsBySlug = (slug) => {\r\n    return async dispatch => {\r\n        const res = await axios.get(`/products/${slug}`);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCTS_BY_SLUG,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            // dispatch({\r\n            //     type: \r\n            // })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProductPage = (payload) => {\r\n    return async dispatch => {\r\n        try {\r\n            const { cid, type } = payload.params;\r\n            const res = await axios.get(`/page/${cid}/${type}`);\r\n            dispatch({ type: productConstants.GET_PRODUCT_PAGE_REQUEST });\r\n            if (res.status === 200) {\r\n                const { page } = res.data;\r\n                dispatch({\r\n                    type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\r\n                    payload: { page }\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: productConstants.GET_PRODUCT_PAGE_FAILURE,\r\n                    payload: { error }\r\n                });\r\n            }\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getProductDetailsById = (payload) => {\r\n    return async dispatch => {\r\n        dispatch({ type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST });\r\n        let res;\r\n        try {\r\n            const { productId } = payload.params;\r\n            res = await axios.get(`/product/${productId}`);\r\n            console.log(res);\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\r\n                payload: { productDetails: res.data.product }\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}